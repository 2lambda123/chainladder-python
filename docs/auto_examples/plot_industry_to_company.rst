.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_industry_to_company.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_industry_to_company.py:


====================================
Using Industry Patterns on a Company
====================================

This example demonstrates how you can create development patterns at a
particular ``index`` grain and apply them to another.




.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:51: RuntimeWarning: divide by zero encountered in true_divide
      coef = np.nansum(w*x*y, axis)/np.nansum((y*0+1)*w*x*x, axis)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:51: RuntimeWarning: invalid value encountered in true_divide
      coef = np.nansum(w*x*y, axis)/np.nansum((y*0+1)*w*x*x, axis)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:55: RuntimeWarning: invalid value encountered in sqrt
      residual = (y-fitted_value)*np.sqrt(w)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:60: RuntimeWarning: invalid value encountered in true_divide
      std_err = np.sqrt(mse/np.nansum(w*x*x*(y*0+1), axis))
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:89: RuntimeWarning: invalid value encountered in multiply
      w = np.nan_to_num(ly*0+1)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:42: RuntimeWarning: Mean of empty slice
      (np.nansum(w*x*y, axis)-np.nansum(x*w, axis)*np.nanmean(y, axis)) /
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:43: RuntimeWarning: Mean of empty slice
      (np.nansum(w*x*x, axis)-np.nanmean(x, axis)*np.nansum(w*x, axis)))
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:43: RuntimeWarning: invalid value encountered in true_divide
      (np.nansum(w*x*x, axis)-np.nanmean(x, axis)*np.nansum(w*x, axis)))
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:44: RuntimeWarning: Mean of empty slice
      intercept = np.nanmean(y, axis) - slope * np.nanmean(x, axis)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\base.py:228: RuntimeWarning: invalid value encountered in multiply
      params.sigma_ /
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\base.py:229: RuntimeWarning: invalid value encountered in sqrt
      np.swapaxes(np.sqrt(x**(2-val))[..., 0:1, :], -1, -2))
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\base.py:229: RuntimeWarning: overflow encountered in add
      np.swapaxes(np.sqrt(x**(2-val))[..., 0:1, :], -1, -2))
          Industry to Company LDF Diff
    1988                           NaN
    1989                   -202.830662
    1990                  -4400.765402
    1991                  -5781.419855
    1992                  -6286.251679
    1993                  -4792.896607
    1994                  -6652.981043
    1995                  -8327.246649
    1996                  -7169.608047
    1997                   -273.269090






|


.. code-block:: default

    import chainladder as cl

    clrd = cl.load_dataset('clrd')['CumPaidLoss']
    clrd = clrd[clrd['LOB'] == 'wkcomp']

    industry = clrd.sum()
    allstate_industry_cl = cl.Chainladder().fit(industry).predict(clrd).ultimate_.loc['Allstate Ins Co Grp']
    allstate_company_cl = cl.Chainladder().fit(clrd.loc['Allstate Ins Co Grp']).ultimate_
    diff = (allstate_industry_cl - allstate_company_cl)

    print(diff.rename('development',['Industry to Company LDF Diff']))


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  4.412 seconds)


.. _sphx_glr_download_auto_examples_plot_industry_to_company.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_industry_to_company.py <plot_industry_to_company.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_industry_to_company.ipynb <plot_industry_to_company.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
