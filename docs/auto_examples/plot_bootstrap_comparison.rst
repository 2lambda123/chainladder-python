.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_bootstrap_comparison.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_bootstrap_comparison.py:


========================
ODP Bootstrap Comparison
========================

This example demonstrates how you can drop the outlier link ratios from the
BootstrapODPSample to reduce reserve variability estimates.




.. image:: /auto_examples/images/sphx_glr_plot_bootstrap_comparison_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\bootstrap.py:64: UserWarning: Process risk not yet implemented...
      warn('Process risk not yet implemented...')
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\base.py:149: UserWarning: drop_high and drop_low cannot be computed when less than three LDFs are present. Ignoring exclusions in some cases.
      warnings.warn('drop_high and drop_low cannot be computed '
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\utils\weighted_regression.py:58: RuntimeWarning: invalid value encountered in sqrt
      residual = (y-fitted_value)*np.sqrt(w)
    c:\users\jboga\onedrive\documents\github\chainladder-python\chainladder\development\base.py:228: RuntimeWarning: invalid value encountered in sqrt
      np.swapaxes(np.sqrt(x**(2-val))[..., 0:1, :], -1, -2))

    <matplotlib.axes._subplots.AxesSubplot object at 0x000001F8552CD550>





|


.. code-block:: default

    import chainladder as cl

    import seaborn as sns
    sns.set_style('whitegrid')

    # Load triangle
    triangle = cl.load_dataset('raa')

    # Use bootstrap sampler to get resampled triangles
    s1 = cl.BootstrapODPSample(
        n_sims=5000, random_state=42).fit(triangle).resampled_triangles_

    ## Alternatively use fit_transform() to access resampled triangles dropping
    #  outlier link-ratios from resampler
    s2 = cl.BootstrapODPSample(
        drop_high=True, drop_low=True,
        n_sims=5000, random_state=42).fit_transform(triangle)

    # Summarize results of first model
    results = cl.Chainladder().fit(s1).ibnr_.sum('origin').rename('columns', ['Original'])
    # Add another column to triangle with second set of results.
    results['Dropped'] = cl.Chainladder().fit(s2).ibnr_.sum('origin')

    # Plot both IBNR distributions
    results.to_frame().plot(kind='hist', bins=50, alpha=0.5)


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  9.323 seconds)


.. _sphx_glr_download_auto_examples_plot_bootstrap_comparison.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_bootstrap_comparison.py <plot_bootstrap_comparison.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_bootstrap_comparison.ipynb <plot_bootstrap_comparison.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
