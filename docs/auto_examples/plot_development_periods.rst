.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_plot_development_periods.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_plot_development_periods.py:


====================================================
Basic Assumption Tuning with Pipeline and Gridsearch
====================================================

This example demonstrates testing multiple number of periods in the development
transformer to see its influence on the overall ultimate estimate.




.. image:: /auto_examples/images/sphx_glr_plot_development_periods_001.png
    :class: sphx-glr-single-img





.. code-block:: python


    import seaborn as sns
    sns.set_style('whitegrid')

    import chainladder as cl

    tri = cl.load_dataset('abc')

    # Set up Pipeline
    steps = [('dev',cl.Development()),
             ('chainladder',cl.Chainladder())]
    params = dict(dev__n_periods=[item for item in range(2,11)])
    pipe = cl.Pipeline(steps=steps)

    # Develop scoring function that returns an Ultimate/Incurred Ratio
    scoring = lambda x: x.named_steps.chainladder.ultimate_.sum()[0] / tri.latest_diagonal.sum()[0]

    # Run GridSearch
    grid = cl.GridSearch(pipe, params, scoring).fit(tri)

    # Plot Results
    g = sns.pointplot(data=grid.results_,x='dev__n_periods',y='score')

**Total running time of the script:** ( 0 minutes  1.081 seconds)


.. _sphx_glr_download_auto_examples_plot_development_periods.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_development_periods.py <plot_development_periods.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_development_periods.ipynb <plot_development_periods.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
